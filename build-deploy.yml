- name: Build & Deploy Docker container
  hosts: dockerServers
  remote_user: ec2-user
  vars_files:
    - ./vars/setup-vars.yml
  tasks:
    - name: Copy pipeline project dir to docker host

      #This line is added during debugging steps so that it can be skipped using "--skip-tags" argument
      tags:
        - skip_this_task
      copy:
        src: "{{ project_dir }}"
        dest: "{{ dest_project_dir }}"

    - name: Authenticate to ECR
      ansible.builtin.shell: aws ecr get-login-password --region "{{ aws_region }}" | docker login --username AWS --password-stdin "{{ ecr_reg }}"

    - name: Create ECR Repo
      community.aws.ecs_ecr:
        name: "{{ ecr_repo }}"
        region: "{{ aws_region }}"

    - name: Build & Push Docker image
      community.docker.docker_image:
        name: "{{ ecr_reg }}/{{ ecr_repo}}"
        build:
          path: "{{ project_dir }}"
        tag: latest
        source: build
        push: true

    - name: Create Docker Container
      community.docker.docker_container:
        name: "{{ image_name }}"
        image: "{{ ecr_reg }}/{{ ecr_repo}}"
        state: started
      notify:
        - Capture container creation1
        - Capture container creation2
        - Output list of container creations
  
  #Added in order to prove that containers are created newly using pipeline 
  handlers:
    - name: Capture container creation1
      ansible.builtin.command: docker ps -a --format "table {{'{{'}}.Names{{'}}'}}\t{{'{{'}}.CreatedAt{{'}}'}}"
      register: created_containers
    - name: Capture container creation2
      ansible.builtin.shell: docker ps -a --format "table {{'{{'}}.Names{{'}}'}}\t{{'{{'}}.CreatedAt{{'}}'}}" >> /home/ec2-user/result.txt
    - name: Output list of container creations
      ansible.builtin.debug:
        var: created_containers.stdout_lines
